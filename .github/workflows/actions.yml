name: CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      PORT: ${{ secrets.PORT }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_REDIS_HOST: ${{ secrets.DB_REDIS_HOST }}
      DB_REDIS_PORT: ${{ secrets.DB_REDIS_PORT }}
      ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
      REFRESH_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm run test

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to VPS
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ secrets.VPS_IP }} << 'EOF'
            # Clone the repository if it hasn't been cloned yet
            if [ ! -d "/var/www/express-ddd" ]; then
              mkdir -p /var/www/express-ddd
              git clone git@github.com:shelllbyyyyyy/express-ddd.git /var/www/express-ddd
            fi
            
            cd /var/www/express-ddd
            git pull origin main   # Pull the latest changes from GitHub

            echo "PORT=${{ secrets.PORT }}" >> .env
            echo "DB_USER=${{ secrets.DB_USER }}" >> .env
            echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
            echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
            echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
            echo "DB_REDIS_HOST=${{ secrets.DB_REDIS_HOST }}" >> .env
            echo "DB_REDIS_PORT=${{ secrets.DB_REDIS_PORT }}" >> .env
            echo "ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }}" >> .env
            echo "REFRESH_TOKEN_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }}" >> .env

            docker compose down       
            docker compose up -d       
          EOF
